// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ALUNO
  PROFESSOR
  ADMIN
}

model Usuario {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  senha      String
  tipo       UserRole  @default(ALUNO)
  created_at DateTime  @default(now())
  aluno      Aluno?
  professor  Professor?

  @@map("usuarios")
}

model Aluno {
  id         Int      @id @default(autoincrement())
  nome       String
  idade      Int
  turma_id   Int
  created_at DateTime @default(now())
  usuario_id Int      @unique
  usuario    Usuario  @relation(fields: [usuario_id], references: [id])

  turma      Turma    @relation(fields: [turma_id], references: [id])

  @@map("alunos")
}

model Turma {
  id           Int       @id @default(autoincrement())
  nome         String
  professor_id Int
  ano          Int
  created_at   DateTime  @default(now())

  professor Professor @relation(fields: [professor_id], references: [id])
  alunos    Aluno[]

  @@map("turmas")
}

model Professor {
  id            Int      @id @default(autoincrement())
  nome          String
  especialidade String
  created_at    DateTime @default(now())
  usuario_id    Int      @unique
  usuario       Usuario  @relation(fields: [usuario_id], references: [id])

  turmas        Turma[]

  @@map("professores")
}
